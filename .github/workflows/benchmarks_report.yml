# Post any reports generated by benchmarks_run.yml .
# Separated for security:
#  https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

name: Report benchmark results

on:
  workflow_run:
    workflows: [benchmark-check]
    types:
      - completed

jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # TODO: cope with artifact not existing.
      - name: Download artifact
        # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "benchmark_reports"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/benchmark_reports.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip benchmark_reports.zip -d .github/workflows/benchmark_reports

      - name: Set up Python
        # benchmarks/bm_runner.py only needs builtins to run.
        uses: actions/setup-python@v3

      - name: Post reports
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python benchmarks/bm_runner.py _gh_post
